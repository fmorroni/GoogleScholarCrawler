{
 "userProfile": {
  "affiliations": [
   "Professor",
   "Department of Computing",
   "Facultad de Ciencias Exactas y Naturales",
   "Universidad de Buenos Aires"
  ],
  "interests": [
   "Logic",
   "Model theory",
   "Model checking",
   "Verification",
   "Software analysis"
  ],
  "id": "DGmfF8QAAAAJ",
  "profileUrl": "https://scholar.google.com/citations?user=DGmfF8QAAAAJ&hl=en",
  "name": "Carlos Gustavo Lopez Pombo",
  "emailDomain": "dc.uba.ar"
 },
 "articleURLs": [],
 "articles": [
  {
   "id": "-f6ydRqryjwC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:-f6ydRqryjwC",
   "title": "Categorical foundations for structured specifications in                               Z",
   "externalArticleUrl": "https://link.springer.com/article/10.1007/s00165-015-0336-0",
   "pdfLink": "https://www.researchgate.net/profile/Carlos-Lopez-Pombo/publication/277940679_Categorical_foundations_for_structured_specifications_in_Z/links/5975ef970f7e9b4016b064ff/Categorical-foundations-for-structured-specifications-in-Z.pdf",
   "authors": "Pablo F Castro, Nazareno Aguirre, Carlos L Pombo, TSE Maibaum",
   "publicationDate": "2015/11",
   "journal": "Formal Aspects of Computing",
   "volume": "27",
   "issue": "5",
   "pages": "831-865",
   "publisher": "Springer London",
   "description": "In this paper we present a formalization of the  notation and its structuring mechanisms. One of the main features of our formal framework, based on category theory and the theory of institutions, is that it enables us to provide an abstract view of  and its related concepts. We show that the main structuring mechanisms of  are captured smoothly by categorical constructions. In particular, we provide a straightforward and clear semantics for promotion, a powerful structuring technique that is often not presented as part of the schema calculus. Here we show that promotion is already an operation over schemas (and more generally over specifications), that allows one to promote schemas that operate on a local notion of state to operate on a subsuming global state, and in particular can be used to conveniently define large specifications from collections of simpler ones. Moreover, our proposed formalization facilitates the�…",
   "totalCitations": 7
  },
  {
   "id": "7PzlFSSx8tAC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:7PzlFSSx8tAC",
   "title": "Automatic quality-of-service evaluation in service-oriented computing",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-030-22397-7_13",
   "pdfLink": "https://www.researchgate.net/profile/Agustin-Martinez-Sune/publication/333625538_Automatic_Quality-of-Service_Evaluation_in_Service-Oriented_Computing/links/5d1a1527a6fdcc2462b5a79c/Automatic-Quality-of-Service-Evaluation-in-Service-Oriented-Computing.pdf",
   "authors": "Agust�n E Martinez Su��, Carlos G Lopez Pombo",
   "publicationDate": "2019/6/17",
   "conference": "International Conference on Coordination Languages and Models",
   "pages": "221-236",
   "publisher": "Springer, Cham",
   "description": "                 Formally describing and analysing quantitative requirements of software components might be important in software engineering; in the paradigm of API-based software systems might be vital. Quantitative requirements can be thought as characterising the Quality of Service – QoS provided by a service thus, useful as a way of classifying and ranking them according to specific needs. An efficient and automatic analysis of this type of requirements could provide the means for enabling dynamic establishing of Service Level Agreements – SLA, allowing for the automatisation of the Service Broker.                 In this paper we propose the use of a language for describing QoS contracts based on convex specification, and a two-phase analysis procedure for evaluating contract satisfaction based on the state of the art techniques used for hybrid system verification. The first phase of the procedure responds to the�…",
   "totalCitations": 4
  },
  {
   "id": "kNdYIx-mwKoC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:kNdYIx-mwKoC",
   "title": "A propositional tableaux based proof calculus for reasoning with default rules",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-319-24312-2_2",
   "pdfLink": "https://www.researchgate.net/profile/Carlos-Lopez-Pombo/publication/300253799_A_Propositional_Tableaux_Based_Proof_Calculus_for_Reasoning_with_Default_Rules/links/5c0fbcd84585157ac1ba085d/A-Propositional-Tableaux-Based-Proof-Calculus-for-Reasoning-with-Default-Rules.pdf",
   "authors": "Valent�n Cassano, Carlos Gustavo Lopez Pombo, Thomas SE Maibaum",
   "publicationDate": "2015/9/21",
   "conference": "International Conference on Automated Reasoning with Analytic Tableaux and Related Methods",
   "pages": "6-21",
   "publisher": "Springer, Cham",
   "description": "                 Since introduced by Reiter in his seminal 1980 paper: ‘A Logic for Default Reasoning’, the subject of reasoning with default rules has been extensively dealt with in the literature on nonmonotonic reasoning. Yet, with some notable exceptions, the same cannot be said about its proof theory. Aiming to contribute to the latter, we propose a tableaux based proof calculus for a propositional variant of Reiter’s presentation of reasoning with default rules. Our tableaux based proof calculus is based on a reformulation of the semantics of Reiter’s view of a default theory, i.e., a tuple comprised of a set of sentences and a set of default rules, as a premiss structure. In this premiss structure, sentences stand for definite assumptions, as normally found in the literature, and default rules stand for tentative assumptions, as opposed to rules of inference, as normally found in the literature. On this basis, a default consequence is�…",
   "totalCitations": 2
  },
  {
   "id": "mB3voiENLucC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:mB3voiENLucC",
   "title": "A proof theoretic basis for relational semantics",
   "externalArticleUrl": "https://arxiv.org/abs/2107.08253",
   "pdfLink": "https://arxiv.org/pdf/2107.08253",
   "authors": "Carlos G Lopez Pombo, Thomas SE Maibaum",
   "publicationDate": "2021/7/17",
   "journal": "arXiv preprint arXiv:2107.08253",
   "description": "Logic has proved essential for formally modeling software based systems. Such formal descriptions, frequently called specifications, have served not only as requirements documentation and formalisation, but also for providing the mathematical foundations for their analysis and the development of automated reasoning tools. Logic is usually studied in terms of its two inherent aspects: syntax and semantics. The relevance of the latter resides in the fact that producing logical descriptions of real-world phenomena, requires people to agree on how such descriptions are to be interpreted and understood by human beings, so that systems can be built with confidence in accordance with their specification. On the more practical side, the metalogical relation between syntax and semantics, determines important aspects of the conclusions one can draw from the application of certain analysis techniques, like model checking. Abstract model theory (i.e., the mathematical perspective on semantics of logical languages) is of little practical value to software engineering endeavours. From our point of view, values (those that can be assigned to constants and variables) should not be just points in a platonic domain of interpretation, but elements that can be named by means of terms over the signature of the specification. In a nutshell, we are not interested in properties that require any semantic information not representable using the available syntax. In this paper we present a framework supporting the proof theoretical formalisation of classes of relational models for behavioural logical languages, whose domains of discourse are guaranteed to be formed�…",
   "totalCitations": 1
  },
  {
   "id": "IWHjjKOFINEC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:IWHjjKOFINEC",
   "title": "Quality of service ranking by quantifying partial compliance of requirements",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-030-50029-0_12",
   "pdfLink": "https://link.springer.com/chapter/10.1007/978-3-030-50029-0_12",
   "authors": "Agust�n Eloy Martinez Su��, Carlos Gustavo Lopez Pombo",
   "publicationDate": "2020/6/15",
   "conference": "International Conference on Coordination Languages and Models",
   "pages": "181-189",
   "publisher": "Springer, Cham",
   "description": "                 While there is not much discussion on the importance of formally describing and analysing quantitative requirements in the process of software construction; in the paradigm of API-based software systems it could be vital. Quantitative attributes can be thought as attributes determining the Quality of Service – QoS provided by a software component published as a service. In this sense, they play a determinant role in classifying software artifacts according to specific needs stated as requirements. In previous works we presented an efficient, and fully automatic, analysis technique for establishing Service Level Agreements – SLA. Such a proposal relays on describing QoS contracts as convex specifications, and compliance checking is performed by the application of an analysis algorithm based on state of the art techniques used in hybrid system verification. Such a technique succeeds in offering a procedure�…",
   "totalCitations": 1
  },
  {
   "id": "dhFuZR0502QC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:dhFuZR0502QC",
   "title": "Satisfiability Calculus: An Abstract Formulation of Semantic Proof Systems",
   "externalArticleUrl": "https://content.iospress.com/articles/fundamenta-informaticae/fi1804",
   "pdfLink": "https://notablesdelaciencia.conicet.gov.ar/bitstream/handle/11336/123309/CONICET_Digital_Nro.986bbb5e-2146-4bc6-a522-16e2c4e2aff9_A.pdf?sequence=2&isAllowed=y",
   "authors": "Carlos G Lopez Pombo, Pablo F Castro, Nazareno M Aguirre, Thomas SE Maibaum",
   "publicationDate": "2019/1/1",
   "journal": "Fundamenta Informaticae",
   "volume": "166",
   "issue": "4",
   "pages": "297-347",
   "publisher": "IOS Press",
   "description": "The theory of institutions, introduced by Goguen and Burstall in 1984, can be thought of as an abstract formulation of model theory. This theory has been shown to be particularly useful in computer science, as a mathematical foundation for formal approaches to software construction. Institution theory was extended by a number of researchers, Jos� Meseguer among them, who, in 1989, presented General Logics, wherein the model theoretical view of institutions is complemented by providing (categorical) structures supporting the proof theory of any given logic. In other words, Meseguer introduced the notion of proof calculus as a formalisation of syntactical deduction, thus “implementing” the entailment relation of a given logic. In this paper we follow the approach initiated by Goguen and introduce the concept of Satisfiability Calculus. This concept can be regarded as the semantical counterpart of Meseguer’s notion�…",
   "totalCitations": 1
  },
  {
   "id": "MXK_kJrjxJIC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:MXK_kJrjxJIC",
   "title": "Communicating machines as a dynamic binding mechanism of services",
   "externalArticleUrl": "https://arxiv.org/abs/1602.03597",
   "pdfLink": "https://arxiv.org/pdf/1602.03597",
   "authors": "Ignacio Vissani, Carlos Gustavo Lopez Pombo, Emilio Tuosto",
   "publicationDate": "2016/2/11",
   "journal": "arXiv preprint arXiv:1602.03597",
   "description": "Distributed software is becoming more and more dynamic to support applications able to respond and adapt to the changes of their execution environment. For instance, service-oriented computing (SOC) envisages applications as services running over globally available computational resources where discovery and binding between them is transparently performed by a middleware. Asynchronous Relational Networks (ARNs) is a well-known formal orchestration model, based on hypergraphs, for the description of service-oriented software artefacts. Choreography and orchestration are the two main design principles for the development of distributed software. In this work, we propose Communicating Relational Networks (CRNs), which is a variant of ARNs, but relies on choreographies for the characterisation of the communicational aspects of a software artefact, and for making their automated analysis more efficient.",
   "totalCitations": 1
  },
  {
   "id": "e5wmG9Sq2KIC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:e5wmG9Sq2KIC",
   "title": "Integrating deduction and model finding in a language independent setting",
   "externalArticleUrl": "https://arxiv.org/abs/2206.07180",
   "pdfLink": "https://arxiv.org/pdf/2206.07180",
   "authors": "Carlos Gustavo Lopez Pombo, Agust�n Eloy Martinez Su��",
   "publicationDate": "2022/6/14",
   "journal": "arXiv preprint arXiv:2206.07180",
   "description": "Software artifacts are ubiquitous in our lives being an essential part of home appliances, cars, cel phones, and even in more critical activities like aeronautics and health sciences. In this context software failures may produce enormous losses, either economical or, in the extreme, in human lives. Software analysis is an area in software engineering concerned on the application of different techniques in order to prove the (relative) absence of errors in software artifacts. In many cases these methods of analysis are applied by following certain methodological directives that ensure better results. In a previous work we presented the notion of satisfiability calculus as a model theoretical counterpart of Meseguer's proof calculus, providing a formal foundation for a variety of tools that are based on model construction. The present work shows how effective satisfiability sub-calculi, a special type of satisfiability calculi, can be combined with proof calculi, in order to provide foundations to certain methodological approaches to software analysis by relating the construction of finite counterexamples and the absence of proofs, in an abstract categorical setting."
  },
  {
   "id": "_Qo2XoVZTnwC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:_Qo2XoVZTnwC",
   "title": "Integrating deduction and model finding in a language independent setting",
   "externalArticleUrl": "https://ui.adsabs.harvard.edu/abs/2022arXiv220607180L/abstract",
   "pdfLink": "<Value not found.>",
   "authors": "Carlos Gustavo Lopez Pombo, Agust�n Eloy Martinez Su��",
   "publicationDate": "2022/6",
   "journal": "arXiv e-prints",
   "pages": "arXiv: 2206.07180",
   "description": "Software artifacts are ubiquitous in our lives being an essential part of home appliances, cars, cel phones, and even in more critical activities like aeronautics and health sciences. In this context software failures may produce enormous losses, either economical or, in the extreme, in human lives. Software analysis is an area in software engineering concerned on the application of different techniques in order to prove the (relative) absence of errors in software artifacts. In many cases these methods of analysis are applied by following certain methodological directives that ensure better results. In a previous work we presented the notion of satisfiability calculus as a model theoretical counterpart of Meseguer's proof calculus, providing a formal foundation for a variety of tools that are based on model construction. The present work shows how effective satisfiability sub-calculi, a special type of satisfiability calculi, can be�…"
  },
  {
   "id": "TQgYirikUcIC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:TQgYirikUcIC",
   "title": "Probabilistic Quality of Service aware Service Selection",
   "externalArticleUrl": "https://arxiv.org/abs/2205.09877",
   "pdfLink": "https://arxiv.org/pdf/2205.09877",
   "authors": "Agust�n E Martinez Su��, Carlos G Lopez Pombo",
   "publicationDate": "2022/5/19",
   "journal": "arXiv preprint arXiv:2205.09877",
   "description": "In software-as-a-service paradigms software systems are no longer monolithic pieces of code executing within the boundaries of an organisation, on the contrary, they are conceived as a dynamically changing collection of services, collectively executing, in pursuit of a common business goal. An essential aspect of service selection is determining whether the Quality of Service (QoS) profile of a service satisfies the QoS requirements of a client. In realistic execution environments, such QoS values might be influenced by external, non-controllable events, making it impossible for the service provider to guarantee that the values characterised by a QoS profile will be met, naturally leading to the need of a probabilistic interpretation of QoS profile. In this work we propose: 1) a model for describing probabilistic QoS profiles based on multivariate continuous probability distributions, 2) a language for describing probabilistic QoS requirements, and 3) an automatic procedure for assessing whether a probabilistic QoS profile satisfies a probabilistic QoS requirement."
  },
  {
   "id": "R3hNpaxXUhUC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:R3hNpaxXUhUC",
   "title": "Probabilistic Quality of Service aware Service Selection",
   "externalArticleUrl": "https://ui.adsabs.harvard.edu/abs/2022arXiv220509877M/abstract",
   "pdfLink": "<Value not found.>",
   "authors": "Agust�n E Martinez Su��, Carlos G Lopez Pombo",
   "publicationDate": "2022/5",
   "journal": "arXiv e-prints",
   "pages": "arXiv: 2205.09877",
   "description": "In software-as-a-service paradigms software systems are no longer monolithic pieces of code executing within the boundaries of an organisation, on the contrary, they are conceived as a dynamically changing collection of services, collectively executing, in pursuit of a common business goal. An essential aspect of service selection is determining whether the Quality of Service (QoS) profile of a service satisfies the QoS requirements of a client. In realistic execution environments, such QoS values might be influenced by external, non-controllable events, making it impossible for the service provider to guarantee that the values characterised by a QoS profile will be met, naturally leading to the need of a probabilistic interpretation of QoS profile. In this work we propose: 1) a model for describing probabilistic QoS profiles based on multivariate continuous probability distributions, 2) a language for describing probabilistic�…"
  },
  {
   "id": "HDshCWvjkbEC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:HDshCWvjkbEC",
   "title": "A proof theoretic basis for relational semantics",
   "externalArticleUrl": "https://ui.adsabs.harvard.edu/abs/2021arXiv210708253L/abstract",
   "pdfLink": "<Value not found.>",
   "authors": "Carlos G Lopez Pombo, Thomas SE Maibaum",
   "publicationDate": "2021/7",
   "journal": "arXiv e-prints",
   "pages": "arXiv: 2107.08253",
   "description": "Logic has proved essential for formally modeling software based systems. Such formal descriptions, frequently called specifications, have served not only as requirements documentation and formalisation, but also for providing the mathematical foundations for their analysis and the development of automated reasoning tools. Logic is usually studied in terms of its two inherent aspects: syntax and semantics. The relevance of the latter resides in the fact that producing logical descriptions of real-world phenomena, requires people to agree on how such descriptions are to be interpreted and understood by human beings, so that systems can be built with confidence in accordance with their specification. On the more practical side, the metalogical relation between syntax and semantics, determines important aspects of the conclusions one can draw from the application of certain analysis techniques, like model checking�…"
  },
  {
   "id": "qUcmZB5y_30C",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:qUcmZB5y_30C",
   "title": "On the construction of explosive relation algebras",
   "externalArticleUrl": "https://arxiv.org/abs/2009.02720",
   "pdfLink": "https://arxiv.org/pdf/2009.02720",
   "authors": "Carlos G Lopez Pombo, Marcelo F Frias, Thomas SE Maibaum",
   "publicationDate": "2020/9/6",
   "journal": "arXiv preprint arXiv:2009.02720",
   "description": "Fork algebras are an extension of relation algebras obtained by extending the set of logical symbols with a binary operator called fork. This class of algebras was introduced by Haeberer and Veloso in the early 90's aiming at enriching relation algebra, an already successful language for program specification, with the capability of expressing some form of parallel computation. The further study of this class of algebras led to many meaningful results linked to interesting properties of relation algebras such as representability and finite axiomatizability, among others. Also in the 90's, Veloso introduced a subclass of relation algebras that are expansible to fork algebras, admitting a large number of non-isomorphic expansions, referred to as explosive relation algebras. In this work we discuss some general techniques for constructing algebras of this type."
  },
  {
   "id": "hC7cP41nSMkC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:hC7cP41nSMkC",
   "title": "On the construction of explosive relation algebras",
   "externalArticleUrl": "https://ui.adsabs.harvard.edu/abs/2020arXiv200902720L/abstract",
   "pdfLink": "<Value not found.>",
   "authors": "Carlos G Lopez Pombo, Marcelo F Frias, Thomas SE Maibaum",
   "publicationDate": "2020/9",
   "journal": "arXiv e-prints",
   "pages": "arXiv: 2009.02720",
   "description": "Fork algebras are an extension of relation algebras obtained by extending the set of logical symbols with a binary operator called fork. This class of algebras was introduced by Haeberer and Veloso in the early 90's aiming at enriching relation algebra, an already successful language for program specification, with the capability of expressing some form of parallel computation. The further study of this class of algebras led to many meaningful results linked to interesting properties of relation algebras such as representability and finite axiomatizability, among others. Also in the 90's, Veloso introduced a subclass of relation algebras that are expansible to fork algebras, admitting a large number of non-isomorphic expansions, referred to as explosive relation algebras. In this work we discuss some general techniques for constructing algebras of this type."
  },
  {
   "id": "qxL8FJ1GzNcC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:qxL8FJ1GzNcC",
   "title": "Boosting the Reuse of Formal Specifications",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-319-94821-8_28",
   "pdfLink": "http://www.t-news.cn/Floc2018/FLoC2018-pages/proceedings_paper_139.pdf",
   "authors": "Mariano M Moscato, Carlos G Lopez Pombo, C�sar A Munoz, Marco A Feli�",
   "publicationDate": "2018/7/9",
   "conference": "International Conference on Interactive Theorem Proving",
   "pages": "477-494",
   "publisher": "Springer, Cham",
   "description": "               Advances in theorem proving have enabled the emergence of a variety of formal developments that, over the years, have resulted in large corpuses of formalizations. For example, the NASA PVS Library is a collection of 55 formal developments written in the Prototype Verification System (PVS) over a period of almost 30�years and containing more than 28000 proofs. Unfortunately, the simple accumulation of formal developments does not guarantee their reusability. In fact, in formal systems with very expressive specification languages, it is often the case that a particular conceptual object is defined in different ways. This paper presents a technique to establish sound connections between formal definitions. Such connections support the possibility of (partial) borrowing of proved results from one formal description into another, improving the reusability of formal developments. The technique is described�…"
  },
  {
   "id": "mVmsd5A6BfQC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:mVmsd5A6BfQC",
   "title": "(Heterogeneous) Structured specifications in logics without interpolation",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-319-97879-6_16",
   "pdfLink": "https://www.researchgate.net/profile/Carlos-Lopez-Pombo/publication/329498249_Heterogeneous_Structured_Specifications_in_Logics_Without_Interpolation/links/5c0fbbc84585157ac1ba07d2/Heterogeneous-Structured-Specifications-in-Logics-Without-Interpolation.pdf",
   "authors": "Carlos Gustavo Lopez Pombo, Marcelo Fr�as",
   "publicationDate": "2018",
   "book": "Ewa Orłowska on Relational Methods in Logic and Computer Science",
   "pages": "403-439",
   "publisher": "Springer, Cham",
   "description": "               The world of software development has become intrinsically heterogeneous. Many formal languages have been made available to help analysts and designers model different aspects of software. Some examples in the logic realm are equational logic and classical first-order logic, propositional temporal logics such as LTL and CTL (and their first-order versions), multimodal logics such as the dynamic logic PDL and its first-order version, etc. One important feature of a specification language is the existence of structuring mechanisms enabling the modular construction of system descriptions. Structured specifications were introduced by Wirsing for first-order logic, and later presented in the language-independent setting of institutions by Sannella and Tarlecki. Afterwards, Borzyszkowski presented sufficient conditions for a calculus for (homogeneous) structured specifications to be complete. These conditions�…"
  },
  {
   "id": "KlAtU1dfN6UC",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:KlAtU1dfN6UC",
   "title": "Deliverable no.: 5.4/3 Title of Deliverable: Communicating machines as a dynamic binding mechanism of services",
   "externalArticleUrl": "https://www.meals-project.eu/sites/default/files/MEALS-Deliverable-5.4-3.pdf",
   "pdfLink": "https://www.meals-project.eu/sites/default/files/MEALS-Deliverable-5.4-3.pdf",
   "authors": "Ignacio Vissani, Carlos Gustavo Lopez Pombo, Emilio Tuosto",
   "publicationDate": "2015/9/23",
   "description": "Distributed software is becoming more and more dynamic to support applications able to respond and adapt to the changes of their execution environment. For instance, service-oriented computing (SOC) envisages applications as services running over globally available computational resources where discovery and binding between them is transparently performed by a middleware. Asynchronous Relational Networks (ARNs) is a well-known formal orchestration model, based on hypergraphs, for the description of service-oriented software artefacts. Choreography and orchestration are the two main design principles for the development of distributed software. In this work, we propose Communicating Relational Networks (CRNs), which is a variant of ARNs, but relies on choreographies for the characterisation of the communicational aspects of a software artefact, and for making their automated analysis more efficient."
  },
  {
   "id": "hqOjcs7Dif8C",
   "scholarUrl": "https://scholar.google.com/citations?view_op=view_citation&hl=en&oe=ASCII&user=DGmfF8QAAAAJ&pagesize=100&citation_for_view=DGmfF8QAAAAJ:hqOjcs7Dif8C",
   "title": "A full operational semantics for Asynchronous Relational Networks",
   "externalArticleUrl": "https://link.springer.com/chapter/10.1007/978-3-319-28114-8_8",
   "pdfLink": "http://imar.ro/~increst/2014/7_2014.pdf#page=66",
   "authors": "Ignacio Vissani, Carlos Gustavo Lopez Pombo, Ionuţ Ţuţu, Jos� Luiz Fiadeiro",
   "publicationDate": "2015/9/4",
   "conference": "International Workshop on Algebraic Development Techniques",
   "pages": "131-150",
   "publisher": "Springer, Cham",
   "description": "                 Service-oriented computing is a new paradigm where applications run over global computational networks and are formed by services discovered and bound at run-time through the intervention of a middleware. Asynchronous Relational Nets (ARNs) were presented by Fiadeiro and Lopes with the aim of formalising the elements of an interface theory for service-oriented software designs. The semantics of ARNs was originally given in terms of sequences of sets of actions corresponding to the behaviour of the service. Later, they were given an institution-based semantics where signatures are ARNs and models are morphisms into ground networks, that have no dependencies on external services.                 In this work, we propose a full operational semantics capable of reflecting the dynamic nature of service execution by making explicit the reconfigurations that take place at run-time as the result of the�…"
  }
 ]
}